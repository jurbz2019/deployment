#!/bin/bash

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2020 Software Assurance Marketplace

#
# Utility functions that are specific to the SWAMP-in-a-Box installer.
#

#
# Remove temporary DB password files. Reset the terminal's 'echo' property.
#
function remove_db_password_files {
    rm -f /etc/.mysql_root
    rm -f /etc/.mysql_web
    rm -f /etc/.mysql_java
    rm -f /etc/.mysql_admin
    rm -f /opt/swamp/sql/sql.cnf
    stty echo 1>/dev/null 2>&1 || true
}

#
# Tell the given list of (potential) system services to start/stop/restart.
#
function tell_services {
    local action=$1
    local tell_svc=$BINDIR/runtime/sbin/swamp_manage_service

    for svc in "${@:2}" ; do
        if [ "$("$tell_svc" "$svc" status)" != "error" ]; then
            echo "Telling the $svc system service to $action"
            "$tell_svc" "$svc" "$action"
        fi
    done
}

############################################################################

#
# Process command-line arguments for the "singleserver" installer.
#
function get_args {
    MODE=""
    RELEASE_NUMBER=""
    BUILD_NUMBER=""
    DBPASSWORD=""
    SWAMPADMINPASSWORD=""

    for arg in "$@" ; do
        case "$arg" in
            -install|--install) MODE=-install ;;
            -upgrade|--upgrade) MODE=-upgrade ;;

            \?|h|-h|-help|--help)
                echo "Usage: $0 <release number> <DB password> <SWAMP admin password>" 1>&2
                exit 1
                ;;

            *)
                if [ -z "$RELEASE_NUMBER" ]; then
                    RELEASE_NUMBER=$arg
                elif [ -z "$DBPASSWORD" ]; then
                    DBPASSWORD=$arg
                else
                    SWAMPADMINPASSWORD=$arg
                fi
                ;;
        esac
    done

    #
    # Set reasonable defaults for anything that wasn't specified.
    #
    if [ -z "$MODE" ]; then
        MODE=-install
    fi
    if [ -z "$RELEASE_NUMBER" ] \
       && rpm -q --whatprovides swampinabox-backend 1>/dev/null 2>&1
    then
        RELEASE_NUMBER=$(rpm -q --qf '%{VERSION}' swampinabox-backend)
    fi
    if [ -z "$BUILD_NUMBER" ]; then
        BUILD_NUMBER=$(date +"%Y%m%d%H%M%S").singleserver
    fi
    if [ -z "$DBPASSWORD" ]; then
        DBPASSWORD=swampinabox
    fi
    if [ -z "$SWAMPADMINPASSWORD" ]; then
        SWAMPADMINPASSWORD=swamp
    fi

    #
    # Write out what we found, and check for errors.
    #
    echo "Version: $RELEASE_NUMBER (build $BUILD_NUMBER)"
    echo "Mode: $MODE"
    echo "DB password: $DBPASSWORD"
    echo "SWAMP admin password: $SWAMPADMINPASSWORD"

    if [ -z "$RELEASE_NUMBER" ]; then
        echo "" 1>&2
        echo "Error: Release number (version) must be specified" 1>&2
        exit 1
    fi
    if [[ ! ( "$RELEASE_NUMBER" =~ ^[[:digit:]]+([.][[:digit:]]+).*$ ) ]]; then
        echo "" 1>&2
        echo "Error: Release number (version) is not well-formed" 1>&2
        exit 1
    fi
}
