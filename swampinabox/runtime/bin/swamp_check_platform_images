#!/bin/bash

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2019 Software Assurance Marketplace

#
# Check for deprecated and outdated platform images.
#

encountered_error=0
trap 'encountered_error=1; echo "Error (unexpected): In $(basename "$0"): $BASH_COMMAND" 1>&2' ERR
set -o errtrace

##########################################################################

platforms_image_store="/swamp/platforms/images"
platforms_script_store="/opt/swamp/sql/platforms"

assessment_platforms_inventory="/opt/swamp/etc/platforms-assessments.txt"
viewer_platforms_inventory="/opt/swamp/etc/platforms-viewers.txt"

deprecated_platforms=()
out_of_date_platforms=()

##########################################################################

function check_assessment_image() {
    platform_file="$1"
    platform_qcow="$(basename "$platform_file")"

    platform_install_sql=""
    for platform_sql in "$platforms_script_store"/*.sql ; do
        platform=$(basename "$platform_sql" .sql)
        platform=${platform/\.minorversion/}

        if [[ $platform =~ (.*)(-32|-64) ]]; then
            distribution=${BASH_REMATCH[1]}
            bits=${BASH_REMATCH[2]}

            if [[ $platform_qcow  =~ ^"condor-$distribution".*"$bits-master".*".qcow2" ]]; then
                platform_install_sql="$platform_sql"
                break
            fi
        fi
    done

    if [ -z "$platform_install_sql" ]; then
        deprecated_platforms+=($platform_file)
    elif ! grep -E "^$platform_qcow\$" "$assessment_platforms_inventory" 1>/dev/null 2>/dev/null ; then
        out_of_date_platforms+=($platform_file)
    fi
    return 0
}

function check_viewer_image() {
    platform_file="$1"
    platform_qcow="$(basename "$platform_file")"

    if ! grep -E "^$platform_qcow\$" "$viewer_platforms_inventory" 1>/dev/null 2>/dev/null ; then
        out_of_date_platforms+=($platform_file)
    fi
    return 0
}

##########################################################################

for qcow_file in "$platforms_image_store"/*.qcow2 ; do
    if [[ "$qcow_file" =~ -viewer- ]]; then
        check_viewer_image "$qcow_file"
    else
        check_assessment_image "$qcow_file"
    fi
done

platforms_need_updating=0

if [ ${#deprecated_platforms[@]} -ne 0 ]; then
    echo "The following platform images are deprecated and may be deleted:"
    for qcow_file in "${deprecated_platforms[@]}"; do
        echo "    $qcow_file"
    done
    platforms_need_updating=1
fi
if [ ${#out_of_date_platforms[@]} -ne 0 ]; then
    echo "The following platform images are out of date:"
    for qcow_file in "${out_of_date_platforms[@]}"; do
        echo "    $qcow_file"
    done
    platforms_need_updating=1
fi
if [ $platforms_need_updating -eq 0 ]; then
    echo "Platform images are up to date."
fi

##########################################################################

if [ $encountered_error -ne 0 ]; then
    echo "$0: Errors were encountered while running this script."
    exit 2
fi
exit $platforms_need_updating
