[[system-requirements]]
System Requirements
-------------------

SWAMP-in-a-Box is designed to be installed on a dedicated host, one that is
not providing other services -- including Apache HTTP Server, MySQL/MariaDB,
and HTCondor.

[TIP]
====
If you are installing SWAMP-in-a-Box on an Amazon Elastic Compute Cloud
(Amazon EC2) instance, consult the appendix on <<appendix-amazon-ec2>> for
special considerations and examples.
====


[[hardware-requirements]]
Hardware Requirements
~~~~~~~~~~~~~~~~~~~~~

The hardware requirements for SWAMP-in-a-Box are driven primarily by the
following considerations.

1. Whether you wish to run assessments using virtual machines (VMs) or
   Docker containers.

+
The main advantage of virtual machines is that they provide stronger
isolation guarantees compared to Docker containers. The SWAMP runs Docker
containers as `root` via a custom build of
https://research.cs.wisc.edu/htcondor/[HTCondor]. Thus, packages containing
malicious code (the SWAMP builds packages according to the arbitrary
instructions that they provide) might be able to take advantages of any
vulnerabilities and weaknesses in Docker in order to directly compromise the
SWAMP-in-a-Box host. The same package being assessed inside a virtual
machine would have direct access to only that one virtual host, whose
lifetime is only for that specific assessment.

+
[IMPORTANT]
====
To emphasize, the SWAMP runs Docker containers as `root`, which has security
implications for the SWAMP-in-a-Box host.
====

+
The main advantage of Docker containers is that they do not require special
hardware features to run and can thus run on more kinds of hosts, including
virtual machines and Amazon Elastic Compute Cloud (Amazon EC2) instances.
They also run assessments slightly more quickly, due to shorter start up
times.

2. Whether you wish to use the <<add-on-viewers,optional Code Dx results
   viewer>>. Currently, this requires the host to support virtual machines
   (VMs).

3. The number of simultaneous assessments and instances of the
   <<add-on-viewers,optional Code Dx results viewer>> you wish to be able to
   run at any given time. Each assessment and viewer instance requires
   2 cores and 6G of memory.

4. The number of assessment platforms that need to be installed to support
   the package types you wish to assess. See the section on
   <<add-on-platforms,installing platforms>> for details about the disk
   space required.

.Minimum hardware requirements:

  * Cores:  4
  * Memory: 16G
  * Disk:   64G

.Recommended hardware:

  * Cores:  8
  * Memory: 64G
  * Disk:   1T

.Required support for virtual machines:

In order to run virtual machines, the SWAMP-in-a-Box host must support
https://www.linux-kvm.org/page/Main_Page[KVM] virtualization:

* Modern x86-family processors provide support for KVM virtualization via
  Intel's VT-x or AMD's AMD-V extensions. On some systems, it might be
  necessary to enable Intel Virtual Technology extensions in the BIOS.

* If you are installing SWAMP-in-a-Box in a virtual machine, it might be
  possible to configure the hypervisor to support nested virtualization. For
  example, when using a VMware product as the hypervisor, enable settings
  such as "Expose hardware-assisted virtualization to the guest operating
  system" and "Virtualize Intel VT-x/EPT or AMD-V/RVI."


Supported Operating Systems
~~~~~~~~~~~~~~~~~~~~~~~~~~~

CentOS 7 is the only supported operating system. Other similar Linux
distributions, such as Red Hat Enterprise Linux, might work but are
untested.


Supported Disk Partitioning Schemes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

As much space as possible should be allocated to the `/` partition without
deleting or shrinking required system partitions, e.g., `/boot` and `swap`.
For example, if there is a separate partition for `/home`, delete it, and
allocate the space to the `/` partition.


Create a User Account with Full `sudo` Privileges
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

We recommend creating a normal user account with full `sudo` privileges so
that the SWAMP-in-a-Box host can be administered without being logged in as
`root` all the time. To create such an account:

1. Log in as `root`.

2. Create the new user account (replace `<username>` with the name of the
new account):

+
----
useradd <username>
----

3. Set the new account's password:

+
----
passwd <username>
----

4. Run `visudo`, which will let you edit the `sudoers` file in the `vi` text
editor. Find the line similar to

+
----
root ALL=(ALL) ALL
----

+
Add below it

+
----
<username> ALL=(ALL) ALL
----

Whenever a task requires `root` access to the SWAMP-in-a-Box host, it can
be run while logged in as the user created above by prefixing the relevant
commands with `sudo`. For example, to use the `vi` text editor to edit
`/opt/swamp/etc/swamp.conf` as `root`, run the following command:

----
sudo vi /opt/swamp/etc/swamp.conf
----


Disable SELinux
~~~~~~~~~~~~~~~

SWAMP-in-a-Box will not install or function correctly when SELinux is
in `enforcing` mode, in part because the various software packages that
SWAMP-in-a-Box relies on do not all support SELinux.

To disable SELinux, as `root` (or using `sudo`), edit `/etc/selinux/config`
by changing the line `SELINUX=enforcing` to `SELINUX=disabled`. Then reboot
the host.


[[configure-firewalls]]
Configure Firewalls
~~~~~~~~~~~~~~~~~~~

With regards to network traffic, the SWAMP-in-a-Box host is expected to:

* Respond to incoming HTTPS (port 443) network traffic, because it is
required to access the SWAMP web application and for the web application to
function correctly.

* Potentially generate outgoing traffic while performing an assessment of
a package, typically using HTTP, HTTPS, FTP, FTPS, SSH, and rsync. Traffic
can include:

** Updating of the assessment platform's currently installed set of packages

** Downloading of user-specified dependencies for the package being assessed

** Contacting license servers

** Other traffic generated by the package's build system.

+
Each assessment is run in a virtual machine that is managed by `libvirtd`.
By default, SWAMP-in-a-Box configures `libvirtd` to assign each virtual
machine an IP address in the range 192.168.123.2 through 192.168.123.254,
and to use network address translation (NAT) to contact external hosts.

Any firewalls protecting the SWAMP-in-a-Box host must be configured to allow
the above network traffic. The SWAMP-in-a-Box installer will not modify the
host's firewall configuration.

[IMPORTANT]
====
Restart the `libvirtd` service on the host whenever the host's firewall
configuration is modified. To do so, as `root` (or using `sudo`), run the
following command:

----
service libvirtd restart
----

This is necessary because the `libvirtd` service modifies the host's
firewall configuration in order to allow the virtual machines started by it
to access the host's network, but it does not make its configuration changes
permanent.
====

[example]
.Allowing Incoming HTTPS and SSH Traffic with `firewalld`
====
For systems that use `firewalld`, such as CentOS 7 by default, use
`firewall-cmd` to permanently allow HTTPS and SSH traffic. Then restart the
`firewalld` and `libvirtd` services. For example, as `root` (or using
`sudo`), run the following commands:

----
firewall-cmd --zone=public --permanent --add-service=https
firewall-cmd --zone=public --permanent --add-service=ssh
systemctl restart firewalld
systemctl restart libvirtd
----
====


Other Considerations
~~~~~~~~~~~~~~~~~~~~

The <<installing-sib,SWAMP-in-a-Box install and upgrade process>> configures
only those aspects of the host that are directly involved in ensuring that
the SWAMP functions correctly. Other aspects are the responsibility of the
host's system administrator. For example, consider looking at the Applied
Crypto Hardening guide at https://bettercrypto.org for suggestions on how to
configure the SSH server and other cryptographic tools on the host.
