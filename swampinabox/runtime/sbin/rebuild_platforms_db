#!/bin/bash

# This file is subject to the terms and conditions defined in
# 'LICENSE.txt', which is part of this source code distribution.
#
# Copyright 2012-2020 Software Assurance Marketplace

#
# Rebuild the 'platforms' database.
#

encountered_error=0
trap 'encountered_error=1; echo "Error (unexpected): In $(basename "$0"): $BASH_COMMAND" 1>&2' ERR
set -o errtrace

if [ "$(whoami)" != "root" ]; then
    echo "Error: This utility must be run as 'root'. Perhaps use 'sudo'." 1>&2
    exit 1
fi

############################################################################

BINDIR=$(dirname "$0")
platforms_image_store="/swamp/platforms/images"
platforms_script_store="/opt/swamp/sql/platforms"
platforms_delete_script="/opt/swamp/sql/util/delete_platforms.sql"

source "$BINDIR/db_support.functions"
trap 'stty echo ; reset_db_support' EXIT
trap 'stty echo ; reset_db_support ; exit 1' INT TERM

setup_db_support

############################################################################

echo "Resetting the platforms database by removing existing platforms"
do_mysql_command "$platforms_delete_script"

############################################################################

echo "Adding platforms for the current release to the database"
for platform_sql in "$platforms_script_store"/*.sql ; do
    platform=$(basename "$platform_sql" .sql)
    platform=${platform/\.minorversion/}

    if [[ $platform =~ (.*)(-32|-64) ]]; then
        distribution=${BASH_REMATCH[1]}
        bits=${BASH_REMATCH[2]}

        for qcow_file in $platforms_image_store/condor-$distribution*$bits-master*.qcow2 ; do
            if [ -f "$qcow_file" ]; then
                echo "Adding: $platform"
                do_mysql_command "$platform_sql"
                break
            fi
        done
    else
        echo "Error: Unable to identify platform: $platform_sql" 1>&2
        encountered_error=1
    fi
done
echo "Finished adding platforms to the database"

############################################################################

if [ $encountered_error -eq 0 ]; then
    echo "Finished rebuilding the platforms database"
else
    echo "Error: Finished rebuilding the platforms database, but with errors" 1>&2
fi

reset_db_support
exit $encountered_error
